#!/usr/bin/env ruby
require_relative '../init'
require_relative '../lib/cryptconverter'

require 'temporal/worker'

Dir[File.expand_path('../workflows/*.rb', __dir__)].each { |f| require f }
Dir[File.expand_path('../activities/*.rb', __dir__)].each { |f| require f }
Dir[File.expand_path('../middleware/*.rb', __dir__)].each { |f| require f }

if !ENV['USE_ENCRYPTION'].nil?
  Temporal.configure do |config|
    config.task_queue = 'crypt'
    config.converter = Temporal::CryptConverter.new(
      payload_converter: Temporal::Configuration::DEFAULT_CONVERTER
    )
  end
end

worker = Temporal::Worker.new(binary_checksum: `git show HEAD -s --format=%H`.strip)

worker.register_workflow(AsyncActivityWorkflow)
worker.register_workflow(AsyncHelloWorldWorkflow)
worker.register_workflow(BranchingWorkflow)
worker.register_workflow(CallFailingActivityWorkflow)
worker.register_workflow(CancellingTimerWorkflow)
worker.register_workflow(CheckWorkflow)
worker.register_workflow(FailingActivitiesWorkflow)
worker.register_workflow(FailingWorkflow)
worker.register_workflow(HelloWorldWorkflow)
worker.register_workflow(InvalidContinueAsNewWorkflow)
worker.register_workflow(LocalHelloWorldWorkflow)
worker.register_workflow(LongWorkflow)
worker.register_workflow(LoopWorkflow)
worker.register_workflow(MetadataWorkflow)
worker.register_workflow(ParentCloseWorkflow)
worker.register_workflow(ParentIdReuseWorkflow)
worker.register_workflow(ParentWorkflow)
worker.register_workflow(ProcessFileWorkflow)
worker.register_workflow(QueryWorkflow)
worker.register_workflow(QuickTimeoutWorkflow)
worker.register_workflow(RandomlyFailingWorkflow)
worker.register_workflow(ReleaseWorkflow)
worker.register_workflow(ResultWorkflow)
worker.register_workflow(ScheduleChildWorkflow)
worker.register_workflow(SendSignalToExternalWorkflow)
worker.register_workflow(SerialHelloWorldWorkflow)
worker.register_workflow(SideEffectWorkflow)
worker.register_workflow(SignalWithStartWorkflow)
worker.register_workflow(SimpleTimerWorkflow)
worker.register_workflow(SlowChildWorkflow)
worker.register_workflow(StartChildWorkflowWorkflow)
worker.register_workflow(TimeoutWorkflow)
worker.register_workflow(TripBookingWorkflow)
worker.register_workflow(UpsertSearchAttributesWorkflow)
worker.register_workflow(WaitForWorkflow)
worker.register_workflow(WaitForExternalSignalWorkflow)
worker.register_workflow(WaitForNamedSignalWorkflow)

worker.register_activity(AsyncActivity)
worker.register_activity(EchoActivity)
worker.register_activity(FailingActivity)
worker.register_activity(GenerateFileActivity)
worker.register_activity(GuessActivity)
worker.register_activity(HelloWorldActivity)
worker.register_activity(LongRunningActivity)
worker.register_activity(ProcessFileActivity)
worker.register_activity(RandomlyFailingActivity)
worker.register_activity(RandomNumberActivity)
worker.register_activity(SleepActivity)
worker.register_activity(UploadFileActivity)
worker.register_activity(Trip::BookFlightActivity)
worker.register_activity(Trip::BookHotelActivity)
worker.register_activity(Trip::CancelCarActivity)
worker.register_activity(Trip::CancelFlightActivity)
worker.register_activity(Trip::CancelHotelActivity)
worker.register_activity(Trip::MakePaymentActivity)
worker.register_activity(Trip::RentCarActivity)

worker.add_workflow_task_middleware(LoggingMiddleware, 'EXAMPLE')
worker.add_activity_middleware(LoggingMiddleware, 'EXAMPLE')

worker.start
